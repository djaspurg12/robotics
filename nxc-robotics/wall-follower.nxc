int avgReading(byte port, int n) {
  int i;
  int reading = 0;
  int oldReading = 0;
  int newReading = 0;

  string debugStr;
  string debugMsg;

  for(i = 0; i < n; i++) {
    oldReading = newReading;
    reading = SensorRaw(port);
    newReading = reading + oldReading;
    debugStr = NumToStr(n);
    debugMsg = "Got reading: " + debugStr;
    TextOut(0, LCD_LINE8, debugMsg);
  }
  return(newReading/n);
}

int avgUltraReading(byte port, int n) {
  int i;
  int reading = 0;
  int oldReading = 0;
  int newReading = 0;

  for(i = 0; i < n; i++) {
    oldReading = newReading;
    reading = SensorUS(port);
    newReading = reading + oldReading;
  }
  return(newReading/n);
}

task main() { 
  int frontUltraReading;
  int backUltraReading;
  string frontUltraStr;
  string frontUltraMsg;
  string backUltraStr;
  string backUltraMsg;

  int compassReading;
  string compassStr;
  string compassMsg;
  
  SetSensorLowspeed(IN_1);
  SetSensorMode(IN_1, IN_MODE_RAW);
  SetSensorLowspeed(IN_2);
  SetSensorMode(IN_2, IN_MODE_RAW);
  SetSensorLowspeed(IN_3);

  Wait(600); 

  while (true) {

    frontUltraReading = avgUltraReading(IN_1, 1);
    frontUltraStr = NumToStr(frontUltraReading);
    frontUltraMsg = "Front Ultra: " + frontUltraStr;
    TextOut(0, LCD_LINE1, frontUltraMsg);
    
    backUltraReading = avgUltraReading(IN_2, 1);
    backUltraStr = NumToStr(backUltraReading);
    backUltraMsg = "Back Ultra: " + backUltraStr;
    TextOut(0, LCD_LINE2, backUltraMsg);

    compassReading = avgUltraReading(IN_3, 5);
    compassStr = NumToStr(compassReading);
    compassMsg = "Compass: " + compassStr;
    TextOut(0, LCD_LINE3, compassMsg);
    OnFwd(OUT_AB, 30);
/*
    if (abs(frontUltraReading - 20) >= 5) {
      if (frontUltraReading < 20) {
        OnFwd(OUT_A, 30);
        OnFwd(OUT_B, 29);
      } else {
        OnFwd(OUT_A, 29);
        OnFwd(OUT_B, 30);
      }
    } else {
      OnFwd(OUT_AB, 30);
    }
    */
  }
}
